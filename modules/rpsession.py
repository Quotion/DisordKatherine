import discord
import peewee

from discord import app_commands

from datetime import datetime
from typing import Any, Optional, Union

from main import Katherine, AbstractCog
from utils.models import RPSession, RecordsToRP, UserDiscord, Fortune


class ButtonViewOrganizerOfRPSession(discord.ui.View):
    def __init__(self):
        super(ButtonViewOrganizerOfRPSession, self).__init__(timeout=None)

    def get_user_record(self, interaction: discord.Interaction) -> Optional[Union[RecordsToRP, None]]:
        record_id = int(interaction.message.embeds[0].footer.text.split('ID:')[1])
        try:
            record_rp: RecordsToRP = RecordsToRP.select() \
                .join(UserDiscord, on=(UserDiscord.id == RecordsToRP.player_id)) \
                .where(RecordsToRP.record_rp_id == record_id) \
                .get()
        except peewee.DoesNotExist:
            await interaction.response.send_message(f'–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, —á–æ—Ä—Ç...')
            raise peewee.DoesNotExist('Request does not exists')

    @discord.ui.button(label="–ü—Ä–∏–Ω—è—Ç—å –∑–∞—è–≤–∫—É", custom_id="sunrise_button_for_change_record:success",
                       style=discord.ButtonStyle.success, emoji=discord.PartialEmoji.from_str("‚úÖ"))
    async def approve_record(self, interaction: discord.Interaction, button: discord.ui.Button):
        record_rp = self.get_user_record(interaction)

        user = interaction.client.get_user(record_rp.player_id.discord_id)
        channel: discord.DMChannel = await user.create_dm() if not user.dm_channel else user.dm_channel
        message: discord.Message = await channel.fetch_message(record_rp.message_id)
        embed = message.embeds[0]
        embed.add_field(name='–ó–∞—è–≤–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!', value=f'`{interaction.user.name}#'
                                                           f'{interaction.user.discriminator}` –ø—Ä–∏–Ω—è–ª –í–∞—à—É –∑–∞—è–≤–∫—É –Ω–∞ '
                                                           f'—É—á–∞—Å—Ç–∏–µ –≤ –†–ü-–°–µ—Å—Å–∏–∏!')
        view: ButtonViewForRecordRPSession = discord.ui.View.from_message(message) # noqa
        view.change_record.disabled = False
        await message.edit(view=view, embed=embed)
        await channel.send('–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!')

        self.approve_record.disabled = True
        await interaction.message.edit(view=self)

    @discord.ui.button(label="–û—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É", custom_id="sunrise_button_for_delete_record:danger",
                       style=discord.ButtonStyle.danger, emoji=discord.PartialEmoji.from_str("‚ùå"))
    async def discharge_record(self, interaction: discord.Interaction, button: discord.ui.Button):
        record_rp = self.get_user_record(interaction)

        user = interaction.client.get_user(record_rp.player_id.discord_id)
        channel: discord.DMChannel = await user.create_dm() if not user.dm_channel else user.dm_channel
        message: discord.Message = await channel.fetch_message(record_rp.message_id)
        view: ButtonViewForRecordRPSession = discord.ui.View.from_message(message)  # noqa
        view.change_record.disabled = False
        await message.edit(view=view)

        self.approve_record.disabled = True
        await interaction.message.edit(view=self)

class ButtonViewForRecordRPSession(discord.ui.View):
    def __init__(self):
        super(ButtonViewForRecordRPSession, self).__init__(timeout=None)

    @discord.ui.button(label="–ò–∑–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É", custom_id="sunrise_button_for_change_record:secondary",
                       style=discord.ButtonStyle.secondary, emoji=discord.PartialEmoji.from_str("üñäÔ∏è"),
                       disabled=True)
    async def change_record(self, interaction: discord.Interaction, button: discord.ui.Button):
        pass

    @discord.ui.button(label="–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É", custom_id="sunrise_button_for_delete_record:danger",
                       style=discord.ButtonStyle.danger, emoji=discord.PartialEmoji.from_str("üÜë"))
    async def delete_record(self, interaction: discord.Interaction, button: discord.ui.Button):
        pass


class MakeRecordToRPSession(discord.ui.Modal, title='–ó–∞–ø–∏—Å—å –Ω–∞ –†–ü-–°–µ—Å—Å–∏—é'):
    train = discord.ui.TextInput(
        label="–ü–æ–¥–≤–∏–∂–Ω–æ–π —Å–æ—Å—Ç–∞–≤",
        placeholder="81-717/81-720/81-710 –∏ —Ç.–¥.",
        style=discord.TextStyle.short,
        required=True
    )

    time = discord.ui.TextInput(
        label="–í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–∞–º–∫–∏ –≤–∞—à–µ–≥–æ —É—á–∞—Å—Ç–∏—è",
        placeholder="–í—Å—è –†–ü-–°–µ—Å—Å–∏—è/–ù–∞ 1 —á–∞—Å/–ù–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —á–∞—Å –∏ —Ç.–¥.",
        style=discord.TextStyle.short,
        required=True
    )

    comment = discord.ui.TextInput(
        label="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π",
        placeholder="–ü–æ–∂–µ–ª–∞–Ω–∏—è –∫ –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏–∏ –∏–ª–∏ –µ—â–µ —á—Ç–æ-–Ω–∏–±—É–¥—å...",
        style=discord.TextStyle.long,
        required=False
    )

    def __init__(self):
        super(MakeRecordToRPSession, self).__init__(timeout=60.0)

    async def on_submit(self, interaction: discord.Interaction, /) -> None:
        try:
            await interaction.user.send()
        except discord.HTTPException as e:
            if e.code == 50007:
                await interaction.response.send_message("–í–∞–º –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ! "
                                                        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤–∞—à–∏ –õ–° –æ—Ç–∫—Ä—ã—Ç—ã –¥–ª—è –±–æ—Ç–∞!\n–ê –¥–æ "
                                                        "—Ç–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞ **–ó–ê–ü–ò–°–¨ –û–¢–ö–õ–û–ù–ï–ù–ê** –∏–ª–∏ **–û–ë–†–ê–¢–ò–¢–ï–°–¨ –ö "
                                                        "–û–†–ì–ê–ù–ò–ó–ê–¢–û–†–£ –†–ü-–°–ï–°–°–ò–ò**")
                return
            elif e.code == 50006:
                pass
            else:
                raise

        try:
            discord_user = UserDiscord.get(UserDiscord.discord_id == interaction.user.id)
        except peewee.DoesNotExist:
            UserDiscord.insert(discord_id=interaction.user.id).on_conflict_ignore().execute()
            Fortune.insert(discordID=interaction.user.id).on_conflict_ignore().execute()
            discord_user = UserDiscord.get(UserDiscord.discord_id == interaction.user.id)

        await interaction.response.defer()

        rp_session: RPSession = RPSession.get(RPSession.message_id == interaction.message.id)

        record_to_rp: RecordsToRP = RecordsToRP.insert(
            rp_session_id=rp_session,
            player_id=discord_user,
            message_id=0,
            is_approve=False,
            time=self.time.value,
            train=self.train.value,
            comment=self.comment.value if self.comment.value else None).execute()

        fields = [
            {'title': '–ù–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏',
             'text': rp_session.name_rp},
            {'title': '–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è —Å–µ—Å—Å–∏–∏',
             'text': f'<t:{int(rp_session.start_datetime.timestamp())}:f>'},
            {'title': '–¢–∏–ø –ø–æ–¥–≤–∏–∂–Ω–æ–≥–æ —Å–æ—Å—Ç–∞–≤–∞',
             'text': self.train.value},
            {'title': '–í—Ä–µ–º—è —É—á–∞—Å—Ç–∏—è –≤ –†–ü-–°–µ—Å—Å–∏–∏',
             'text': self.time.value},
            {'title': '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π',
             'text': self.comment.value if self.comment.value else '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}
        ]

        fields_org = [
            {'title': '–¢–∏–ø –ø–æ–¥–≤–∏–∂–Ω–æ–≥–æ —Å–æ—Å—Ç–∞–≤–∞:',
             'text': self.train.value},
            {'title': '–í—Ä–µ–º—è —É—á–∞—Å—Ç–∏—è –≤ –†–ü-–°–µ—Å—Å–∏–∏:',
             'text': self.time.value},
            {'title': '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π',
             'text': self.comment.value if self.comment.value else '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}
        ]

        embed = await interaction.client.embed(title="–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω—ã –Ω–∞ –†–ü-–°–µ—Å—Å–∏—é",
                                               text=f"{interaction.user.mention}, –≤—ã –∑–∞–ø–∏—Å–∞–Ω—ã –Ω–∞ –†–ü-–°–µ—Å—Å–∏—é!",
                                               fields=fields,
                                               icon_url=interaction.guild.icon.url,
                                               footer=f'ID:{record_to_rp}')
        channel = await interaction.user.create_dm()
        message_id = await channel.send(embed=embed, view=ButtonViewForRecordRPSession())
        record_to_rp.message_id = message_id
        record_to_rp.save()

        embed_org = await interaction.client.embed(title=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {interaction.user.name}'
                                                         f'#{interaction.user.discriminator} –∑–∞–ø–∏—Å–∞–ª—Å—è –Ω–∞ –†–ü-–°–µ—Å—Å–∏—é',
                                                   text='–û—Ç –í–∞—Å, –∫–∞–∫ –æ—Ç –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞ —Ç—Ä–µ–±—É–µ—Ç –ª–∏–±–æ **–ü–†–ò–ù–Ø–¢–¨**, –ª–∏–±–æ '
                                                        '**–û–¢–ö–õ–û–ù–ò–¢–¨** –∑–∞—è–≤–∫—É –¥–∞–Ω–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞. –ù–∏–∂–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ '
                                                        '–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∑–∞—è–≤–∫–µ',
                                                   fields=fields_org,
                                                   icon_url=interaction.guild.icon.url,
                                                   footer=f'ID:{record_to_rp}')

        member: discord.Member = interaction.guild.get_member(int(rp_session.org_id))
        channel = await member.create_dm()
        await channel.send(embed=embed_org, view=ButtonViewOrganizerOfRPSession())

    async def on_error(self, interaction: discord.Interaction, error: Exception, /) -> None:
        interaction.client.log.error(error)


class RPSessionButtonsView(discord.ui.View):
    def __init__(self):
        super(RPSessionButtonsView, self).__init__(timeout=None)

    @discord.ui.button(label="–û—Ç–∫—Ä—ã—Ç—å –∑–∞–ø–∏—Å—å", custom_id="sunrise_button_for_open_requests:success",
                       style=discord.ButtonStyle.success, emoji=discord.PartialEmoji.from_str("üîì"),
                       row=1)
    async def open_requests(self, interaction: discord.Interaction, button: discord.ui.Button):
        try:
            rpsession = RPSession.get(RPSession.message_id == interaction.message.id)
        except peewee.DoesNotExist:
            await interaction.response.send_message("–û—à–∏–±–∫–∞! –ù–µ –Ω–∞–π–¥–µ–Ω–∞ –†–ü-–°–µ—Å—Å–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. "
                                                    "–£–¥–∞–ª–∏—Ç–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Å–æ–∑–¥–∞–π—Ç–µ –∞–Ω–æ–Ω—Å –∑–∞–Ω–æ–≤–æ!",
                                                    ephemeral=True)
            return

        if not interaction.user.guild_permissions.ban_members \
                and not interaction.user.guild_permissions.manage_channels:
            interaction.response.send_message('```–ù–µ —Ç—ã–∫–∞–π –Ω–∞ –∫–Ω–æ–ø–∫—É, —Å–ª–∞–¥–∫–∏–π, —É —Ç–µ–±—è –ø—Ä–∞–≤ –Ω–µ—Ç. '
                                              '–ò–Ω–∞—á–µ –ª—è–ø–∏—Å –∫—Ä—é–µ —Ç–µ–±—è –Ω–∞–π–¥–µ—Ç, –∑–∞–±–∞–Ω–∏—Ç, –∞ –ø–æ—Ç–æ–º —Å—ä–µ—Å—Ç```',
                                              ephemeral=True)

        await interaction.response.defer()

        self.make_record_rp.disabled = False
        self.open_requests.disabled = True
        self.close_requests.disabled = False
        self.close_rpsession.disabled = True
        await interaction.message.edit(view=self)

    @discord.ui.button(label="–ó–∞–∫—Ä—ã—Ç—å –∑–∞–ø–∏—Å—å", custom_id="sunrise_button_for_close_requests:secondary",
                       style=discord.ButtonStyle.secondary, emoji=discord.PartialEmoji.from_str("üîê"),
                       disabled=True, row=1)
    async def close_requests(self, interaction: discord.Interaction, button: discord.ui.Button):
        try:
            rpsession = RPSession.get(RPSession.message_id == interaction.message.id)
        except peewee.DoesNotExist:
            await interaction.response.send_message("–û—à–∏–±–∫–∞! –ù–µ –Ω–∞–π–¥–µ–Ω–∞ –†–ü-–°–µ—Å—Å–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. "
                                                    "–£–¥–∞–ª–∏—Ç–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Å–æ–∑–¥–∞–π—Ç–µ –∞–Ω–æ–Ω—Å –∑–∞–Ω–æ–≤–æ!",
                                                    ephemeral=True)
            return

        if not interaction.user.guild_permissions.ban_members \
                and not interaction.user.guild_permissions.manage_channels:
            interaction.response.send_message('```–î—É—Ä–Ω–æ–π, —Ç—ã –∫–Ω–æ–ø–∫–æ–π –æ—à–∏–±—Å—è ‚Äî —Ç–≤–æ—è –∫–Ω–æ–ø–∫–∞ –Ω–∏–∂–µ. '
                                              '–î–∞–≤–∞–π –∑–∞–ø–∏—Å—ã–≤–∞–π—Å—è, –µ—Å–ª–∏ —Ç—ã —ç—Ç–æ–≥–æ –µ—â–µ –Ω–µ —Å–¥–µ–ª–∞–ª.```',
                                              ephemeral=True)

        await interaction.response.defer()

        self.make_record_rp.disabled = True
        self.open_requests.disabled = False
        self.close_requests.disabled = True
        self.close_rpsession.disabled = False
        await interaction.message.edit(view=self)

    @discord.ui.button(label="–ó–∞–∫–æ–Ω—á–∏—Ç—å –†–ü-–°–µ—Å—Å–∏—é", custom_id="sunrise_button_for_close_session:danger",
                       style=discord.ButtonStyle.danger, emoji=discord.PartialEmoji.from_str("üöá"),
                       disabled=True, row=1)
    async def close_rpsession(self, interaction: discord.Interaction, button: discord.ui.Button):
        try:
            rpsession = RPSession.get(RPSession.message_id == interaction.message.id)
        except peewee.DoesNotExist:
            await interaction.response.send_message("–û—à–∏–±–∫–∞! –ù–µ –Ω–∞–π–¥–µ–Ω–∞ –†–ü-–°–µ—Å—Å–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. "
                                                    "–£–¥–∞–ª–∏—Ç–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Å–æ–∑–¥–∞–π—Ç–µ –∞–Ω–æ–Ω—Å –∑–∞–Ω–æ–≤–æ!",
                                                    ephemeral=True)
            return

        if not interaction.user.guild_permissions.ban_members \
                and not interaction.user.guild_permissions.manage_channels:
            interaction.response.send_message('```–ó–∞–∫—Ä—ã—Ç—å –†–ü-–°–µ—Å—Å–∏—é —Å–æ–±—Ä–∞–ª—Å—è? –¢–µ–±—è —á—Ç–æ-—Ç–æ –Ω–µ —É—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç? '
                                              '–í—Å–µ–≥–¥–∞ –º–æ–∂–Ω–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è –Ω–∞—à–µ–º—É –ù–ê–ß–ê–õ–¨–ù–ò–ö–£ –ú–ï–¢–†–û–ü–û–õ–ò–¢–ï–ù–ê!```',
                                              ephemeral=True)

        await interaction.response.defer()

        self.open_requests.disabled = True
        self.close_requests.disabled = True
        self.close_rpsession.disabled = True
        self.make_record_rp.disabled = True
        await interaction.message.edit(view=self)

        rpsession.is_active = False
        rpsession.save()

    @discord.ui.button(label="–ó–∞–ø–∏—Å–∞—Ç—å—Å—è", custom_id="sunrise_button_for_make_record:success",
                       style=discord.ButtonStyle.success, emoji=discord.PartialEmoji.from_str("‚úçÔ∏è"),
                       disabled=True, row=2)
    async def make_record_rp(self, interaction: discord.Interaction, button: discord.ui.Button):
        try:
            record_to_rp: RecordsToRP = RecordsToRP \
                .select() \
                .join(RPSession, on=(RPSession.rp_session_id == RecordsToRP.rp_session_id)) \
                .join(UserDiscord, on=(UserDiscord.id == RecordsToRP.player_id)) \
                .where((RPSession.message_id == interaction.message.id)
                       & (UserDiscord.discord_id == interaction.user.id)) \
                .get()
        except peewee.DoesNotExist:
            await interaction.response.send_modal(MakeRecordToRPSession())
            message: discord.Message = interaction.message
            embed = message.embeds[0].to_dict()
            if embed['fields'][1]['value'] == '¬Ø\_(„ÉÑ)_/¬Ø':
                embed['fields'][1]['value'] = interaction.user.mention
            else:
                embed['fields'][1]['value'] += f"\n{interaction.user.mention}"
            await message.edit(embed=discord.Embed.from_dict(embed))
        else:
            if record_to_rp.is_approve:
                embed = await interaction.client.embed(
                    title="–ó–∞–ø–∏—Å—å –Ω–∞ –†–ü-–°–µ—Å—Å–∏—é —É–∂–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∞ –∏ –æ–¥–æ–±—Ä–µ–Ω–∞!",
                    text="–í—ã —É–∂–µ –∑–∞–ø–∏—Å–∞–Ω—ã –Ω–∞ –†–ü-–°–µ—Å—Å–∏—é! –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É, —Ç–æ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∑–∞–≥–ª—è–Ω–∏—Ç–µ –≤ "
                         "–Ω–∞—à–∏ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è!")
            else:
                embed = await interaction.client.embed(
                    title="–ó–∞–ø–∏—Å—å –Ω–∞ –†–ü-–°–µ—Å—Å–∏—é —É–∂–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∞, –Ω–æ –ø–æ–∫–∞ –Ω–µ –æ–¥–æ–±—Ä–µ–Ω–∞!",
                    text="–í—ã —É–∂–µ –∑–∞–ø–∏—Å–∞–Ω—ã –Ω–∞ –†–ü-–°–µ—Å—Å–∏—é, –Ω–æ –í–∞–º –æ—Å—Ç–∞–ª–æ—Å—å —Ç–æ–ª—å–∫–æ –¥–æ–∂–¥–∞—Ç—å—Å—è –æ–¥–æ–±—Ä–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏ –Ω–∞ "
                         "–†–ü-–°–µ—Å—Å–∏—é –æ—Ç –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞! –ï—Å–ª–∏ –∂–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥–ª—è–Ω–∏—Ç–µ –≤ "
                         "–Ω–∞—à–∏ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è!")

            await interaction.response.send_message(embed=embed,
                                                    ephemeral=True)

    async def on_error(self, interaction: discord.Interaction, error: Exception,
                       item: discord.ui.Item[Any], /) -> None:
        interaction.client.log.error(f"Error: {error}\nItem: [{item.type} | {item.label}]")


class RPSessionModal(discord.ui.Modal, title="–ê–Ω–æ–Ω—Å–∏—Ä–æ–≤–∞—Ç—å –†–ü-–°–µ—Å—Å–∏—é"):
    name_rp = discord.ui.TextInput(
        label="–ù–∞–∑–≤–∞–Ω–∏–µ –†–ü-–°–µ—Å—Å–∏–∏",
        style=discord.TextStyle.short,
        required=True
    )

    datetime = discord.ui.TextInput(
        label="–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –†–ü-–°–µ—Å—Å–∏–∏",
        placeholder="–î–î.–ú–ú.–ì–ì–ì–ì –ß–ß:–ú–ú",
        style=discord.TextStyle.short,
        required=True
    )

    map = discord.ui.TextInput(
        label="–ö–∞—Ä—Ç–∞ –†–ü-–°–µ—Å—Å–∏–∏",
        style=discord.TextStyle.short,
        required=True
    )

    comment = discord.ui.TextInput(
        label="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π",
        style=discord.TextStyle.long,
        required=False
    )

    validate_datetime: datetime

    def __init__(self):
        super(RPSessionModal, self).__init__(timeout=15.0)

    async def interaction_check(self, interaction: discord.Interaction, /) -> bool:
        try:
            self.validate_datetime = datetime.strptime(self.datetime.value, "%d.%m.%Y %H:%M")
        except ValueError:
            await interaction.response.send_message("–î–∞—Ç–∞ —É–∫–∞–∑–∞–Ω–∞ –≤ –Ω–µ–≤–µ—Ä–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ!"
                                                    "\n–ü—Ä–∏–º–µ—Ä –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏: `10.05.2023 17:30`")
            return False
        else:
            return True

    async def on_submit(self, interaction: discord.Interaction, /) -> None:
        bot: Katherine = interaction.client  # noqa
        await interaction.response.defer()

        fields: list = [
            {'title': '–ó–∞–ø–∏—Å–∞–≤—à–∏–µ—Å—è:',
             'text': '¬Ø\_(„ÉÑ)_/¬Ø'},
            {'title': '–ù–∞ –æ–¥–æ–±—Ä–µ–Ω–∏–∏:',
             'text': '¬Ø\_(„ÉÑ)_/¬Ø'}
        ]

        if self.comment.value:
            fields.append({
                'title': '–î–æ–ø. –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
                'text': self.comment.value
            })

        embed = await bot.embed(title=self.name_rp.value,
                                text=f"**–ü—Ä–∏–≤–µ—Ç! –ê –≤–æ—Ç –∏ –∞–Ω–æ–Ω—Å –Ω–∞ –†–ü-–°–µ—Å—Å–∏—é!**\n\n"
                                     f"‚Ä¢ –î–∞—Ç–∞: {discord.utils.format_dt(self.validate_datetime, style='d')} üìÜ\n"
                                     f"‚Ä¢ –ö–∞—Ä—Ç–∞: {self.map} üöá\n"
                                     f"‚Ä¢ –ù–∞—á–∞–ª–æ –†–ü-–°–µ—Å—Å–∏–∏: "
                                     f"{discord.utils.format_dt(self.validate_datetime, style='t')} üïê\n\n"
                                     f"üîª –ö –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—é –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ:\n"
                                     f"üìÑ –ì—Ä–∞—Ñ–∏–∫ –¥–≤–∏–∂–µ–Ω–∏—è –ø–æ–µ–∑–¥–æ–≤ –∏ —Ä–∞–∑–±–∏–≤–∫–∞\n"
                                     f"–ê –µ–≥–æ –Ω–µ –±—É–¥–µ—Ç, —Å–∫–æ–ª—å–∫–æ –∑–∞–ø–∏—à–µ—Ç—Å—è –ª—é–¥–µ–π - —Å—Ç–æ–ª—å–∫–æ –∏ –ø–æ–µ–¥–µ—Ç\n"
                                     f"–ù–æ –Ω–∞–¥–æ –º–∏–Ω–∏–º—É–º 5 –º–∞—à–∏–Ω–∏—Å—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –†–ü-—Å–µ—Å—Å–∏—é\n\n"
                                     f"üîª–ó–∞–ø–∏—Å—ã–≤–∞—è—Å—å –Ω–∞ RP-—Å–µ—Å—Å–∏—é, –≤—ã –±–µ—Ä—ë—Ç–µ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∏ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç–µ —É—á–∞—Å—Ç–∏–µ –≤ "
                                     f"—É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è!\n\n"
                                     f"üî∏ –ó–∞ —á–∞—Å –¥–æ –Ω–∞—á–∞–ª–∞ –ø–æ–µ–∑–¥–∫–∏ –ø—Ä–∏—à–ª—ë–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ç–µ–º, –∫—Ç–æ "
                                     f"–∑–∞–ø–∏—Å–∞–ª—Å—è –Ω–∞ —Å–µ—Å—Å–∏—é\n"
                                     f"üî∏ –ó–∞–ø–∏—Å—å –Ω–∞ –†–ü —Å–µ—Å—Å–∏—é –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è —á–µ—Ä–µ–∑ –Ω–∞—à Discord –≤ –∫–∞–Ω–∞–ª–µ #–∑–∞–ø–∏—Å—å-–Ω–∞-—Ä–ø\n\n"
                                     f"‚≠êÔ∏è–î–∞–Ω–Ω–∞—è –†–ü-—Å–µ—Å—Å–∏—è –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –¥–ª—è –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤ –Ω–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞, —á—Ç–æ–±—ã –æ–Ω–∏ "
                                     f"—Å–º–æ–≥–ª–∏ —Å–µ–±—è –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å –º–∞—à–∏–Ω–∏—Å—Ç–∞–º–∏ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –º–µ—Ç—Ä–æ–ø–æ–ª–∏—Ç–µ–Ω–∞\n"
                                     f"‚≠êÔ∏è –í—Å–µ –∏–≥—Ä–æ–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ä–æ—à–æ –æ—Ç–∫–∞—Ç–∞—é—Ç –≤—Å—é –†–ü-—Å–µ—Å—Å–∏—é –ø–æ–ª—É—á–∞—Ç –∫—Ä—É—Ç–æ–π –±–æ–Ω—É—Å "
                                     f"(—ç—Ç–æ –Ω–∞—à –º–∞–ª–µ–Ω—å–∫–∏–π —Å–µ–∫—Ä–µ—Ç–∏–∫)",
                                color=discord.Colour.from_rgb(204, 109, 0),
                                thumbnail=interaction.guild.icon.url,
                                fields=fields)

        message = await interaction.channel.send(  # content="||@everyone||",
            embed=embed,
            view=RPSessionButtonsView())

        RPSession.insert(is_active=True,
                         name_rp=self.name_rp.value,
                         start_datetime=self.validate_datetime,
                         message_id=message.id,
                         org_id=interaction.user.id,
                         map_name=self.map,
                         comment=self.comment.value if self.comment.value else None).execute()

    async def on_error(self, interaction: discord.Interaction, error: Exception, /) -> None:
        interaction.client.log.error(error)
        await interaction.channel.send(f"–ü—Ä–æ–∏–∑–æ—à–ª–æ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ!\n–û—à–∏–±–∫–∞ ‚Äî `{error}`",
                                       ephemeral=True)


class RPSessionCog(AbstractCog, name="–°–∏—Å—Ç–µ–º–∞ –†–ü-–°–µ—Å—Å–∏–π"):
    @app_commands.command(name="–∞–Ω–æ–Ω—Å",
                          description="–°–æ–∑–¥–∞–µ—Ç –∞–Ω–æ–Ω—Å –†–ü-–°–µ—Å—Å–∏–∏ –∏ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –∑–∞—è–≤–∫–∞–º")
    @app_commands.checks.cooldown(1, 15, key=lambda interaction: interaction.user.id)
    @app_commands.default_permissions(manage_messages=True, manage_channels=True)
    @app_commands.check(AbstractCog.reconnect)
    async def announcement(self, interaction: discord.Interaction):
        try:
            RPSession.get(RPSession.is_active == True)
        except peewee.DoesNotExist:
            await interaction.response.send_modal(RPSessionModal())
        else:
            await interaction.response.send_message("–†–ü-–°–µ—Å—Å–∏—è —É–∂–µ —Å–æ–∑–¥–∞–Ω–∞! –ó–∞–∫—Ä–æ–π—Ç–µ –ø—Ä–µ–¥—ã–¥—É—â—É—é, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é!",
                                                    ephemeral=True)


async def setup(client):
    await client.add_cog(RPSessionCog(client))
